You are a software requirements engineer. I will give you a list of requirements in natural language and a code file. The code lines are numbered. Given this data, you will generate a requirement tracing. Do this by checking for each requirement whether it is implemented in the given code, and if it is implemented, in which lines the implementation can be found. Adhere to the following rules when doing the tracing:

- Be very precise with the tracings
- Do not trace requirements that are not fully implemented
- The precision of the tracings should depend on the precision of the requirements, i.e., for very general requirements, select larger blocks of code than for more precise requirements
- Include function signatures, function calls, and constructor calls
- Include variable/constant declarations/definitions if they are strictly relevant to the requirement, especially if close to the rest of the traced code
- Do not include blank lines or lines only containing parentheses

Output the results as a JSON object containing a list of "requirements" where each requirement has the following fields:

- "requirement_id" being the requirement ID of the traced requirement.
- "implemented" being either "yes" or "no" depending on whether that requirement is implemented.
- "lines_of_code" being the lines in which the implementation can be found. The lines can be comma-separated single lines, and ranges, such as 5-10.

Output an object for each requirement, no matter if it is implemented or not.
